{
  "uid" : "648ef29a152a55bc",
  "name" : "test_user_can_add_product_to_basket[offer7]",
  "fullName" : "test_product_page.TestUserAddToBasketFromProductPage#test_user_can_add_product_to_basket",
  "historyId" : "32ece15ac255b2981a9df9e3301ee41a",
  "time" : {
    "start" : 1624452806652,
    "stop" : 1624452810398,
    "duration" : 3746
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Message about adding is incorrect",
  "statusTrace" : "self = <module_5.test_product_page.TestUserAddToBasketFromProductPage object at 0x108696b20>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"64466b7a68bf0175066b31b929ab8d48\")>, promo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"newYear2019\", \"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail), \"offer8\",\n                              \"offer9\"])\n    def test_user_can_add_product_to_basket(self, browser, promo_offer):\n        # Arrange\n        test_link = link + \"/?promo=\" + promo_offer\n        page = ProductPage(browser, test_link)\n        page.open()\n    \n        # Act\n        page.add_product_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # Assert\n>       page.check_message_about_adding()\n\ntest_product_page.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <module_5.pages.product_page.ProductPage object at 0x1085ca580>\n\n    def check_message_about_adding(self):\n>       assert self.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text == self.browser.find_element(\n            *ProductPageLocators.ADD_TO_BASKET_MESSAGE).text, \"Message about adding is incorrect\"\nE       AssertionError: Message about adding is incorrect\n\npages/product_page.py:10: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1624452796870,
      "stop" : 1624452806651,
      "duration" : 9781
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1624452794158,
      "stop" : 1624452796869,
      "duration" : 2711
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "language",
    "time" : {
      "start" : 1624452593563,
      "stop" : 1624452593563,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "browser_name",
    "time" : {
      "start" : 1624452593563,
      "stop" : 1624452593563,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Message about adding is incorrect",
    "statusTrace" : "self = <module_5.test_product_page.TestUserAddToBasketFromProductPage object at 0x108696b20>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"64466b7a68bf0175066b31b929ab8d48\")>, promo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"newYear2019\", \"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail), \"offer8\",\n                              \"offer9\"])\n    def test_user_can_add_product_to_basket(self, browser, promo_offer):\n        # Arrange\n        test_link = link + \"/?promo=\" + promo_offer\n        page = ProductPage(browser, test_link)\n        page.open()\n    \n        # Act\n        page.add_product_to_basket()\n        page.solve_quiz_and_get_code()\n    \n        # Assert\n>       page.check_message_about_adding()\n\ntest_product_page.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <module_5.pages.product_page.ProductPage object at 0x1085ca580>\n\n    def check_message_about_adding(self):\n>       assert self.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text == self.browser.find_element(\n            *ProductPageLocators.ADD_TO_BASKET_MESSAGE).text, \"Message about adding is incorrect\"\nE       AssertionError: Message about adding is incorrect\n\npages/product_page.py:10: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "94aeaa411806133e",
      "name" : "stdout",
      "source" : "94aeaa411806133e.txt",
      "type" : "text/plain",
      "size" : 89
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1624452810408,
      "stop" : 1624452810655,
      "duration" : 247
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "tag",
    "value" : "add_to_basket_from_PP"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestUserAddToBasketFromProductPage"
  }, {
    "name" : "host",
    "value" : "MacBook-Air-Maksim.local"
  }, {
    "name" : "thread",
    "value" : "9523-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "promo_offer",
    "value" : "'offer7'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail", "add_to_basket_from_PP" ]
  },
  "source" : "648ef29a152a55bc.json",
  "parameterValues" : [ "'offer7'" ]
}